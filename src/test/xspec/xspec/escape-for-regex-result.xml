<?xml version="1.0" encoding="UTF-8"?>
<?xml-stylesheet type="text/xsl" href="file:/home/ext-cmarchand/devel/github/xspec/src/compiler/format-xspec-report.xsl"?>
<x:report xmlns:xsl="http://www.w3.org/1999/XSL/Transform"
          xmlns:xs="http://www.w3.org/2001/XMLSchema"
          xmlns:test="http://www.jenitennison.com/xslt/unit-test"
          xmlns:x="http://www.jenitennison.com/xslt/xspec"
          xmlns:functx="http://www.functx.com"
          stylesheet="file:/home/ext-cmarchand/devel/github/tests-xspec/src/main/xsl/escape-for-regex.xslt"
          date="2017-11-14T17:58:17.011+01:00">
   <x:scenario>
      <x:label>No escaping</x:label>
      <x:call function="functx:escape-for-regex">
         <x:param select="'Hello'"/>
      </x:call>
      <x:result select="'Hello'"/>
      <x:test successful="true">
         <x:label>Must not be escaped at all</x:label>
         <x:expect select="'Hello'"/>
      </x:test>
   </x:scenario>
   <x:scenario>
      <x:label>Test simple patterns</x:label>
      <x:scenario>
         <x:label>When encountering parentheses</x:label>
         <x:call function="functx:escape-for-regex">
            <x:param name="arg" select="'(Hello)'"/>
         </x:call>
         <x:result select="'\(Hello\)'"/>
         <x:test successful="true">
            <x:label>escape them.</x:label>
            <x:expect select="'\(Hello\)'"/>
         </x:test>
      </x:scenario>
      <x:scenario>
         <x:label>When encountering a whitespace character class</x:label>
         <x:call function="functx:escape-for-regex">
            <x:param name="arg" select="'\sHello'"/>
         </x:call>
         <x:result select="'\\sHello'"/>
         <x:test successful="true">
            <x:label>escape the backslash</x:label>
            <x:expect select="'\\sHello'"/>
         </x:test>
         <x:test successful="true">
            <x:label>result should have one more character than source</x:label>
            <x:expect select="()"/>
         </x:test>
      </x:scenario>
   </x:scenario>
   <x:scenario>
      <x:label>When processing a list of phrases</x:label>
      <x:context>
         <phrases>
            <phrase>Hello!</phrase>
            <phrase>Goodbye!</phrase>
            <phrase>(So long!)</phrase>
         </phrases>
      </x:context>
      <x:result>
         <phrases>
            <phrase status="changed">Hello!</phrase>
            <phrase status="changed">Goodbye!</phrase>
            <phrase status="same">\(So long!\)</phrase>
         </phrases>
      </x:result>
      <x:test successful="true">
         <x:label>All phrase elements should remain</x:label>
         <x:expect select="()"/>
      </x:test>
      <x:test successful="false">
         <x:label>Strings should be escaped and status attributes should be added</x:label>
         <x:expect>
            <phrases>
               <phrase status="same">Hello!</phrase>
               <phrase status="same">Goodbye!</phrase>
               <phrase status="changed">\(So long!\)</phrase>
            </phrases>
         </x:expect>
      </x:test>
   </x:scenario>
</x:report>
